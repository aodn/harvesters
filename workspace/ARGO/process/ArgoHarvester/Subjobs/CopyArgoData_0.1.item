<?xml version="1.0" encoding="UTF-8"?>
<talendfile:ProcessType xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:talendfile="platform:/resource/org.talend.model/model/TalendFile.xsd" defaultContext="argo_dev">
  <context confirmationNeeded="false" name="argo_dev">
    <contextParameter comment="" name="Destination_Password" prompt="Destination_Password?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_Password" value="bQdsCI2gjYQ="/>
    <contextParameter comment="" name="Destination_Schema" prompt="Destination_Schema?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_String" value="argo"/>
    <contextParameter comment="" name="Destination_Login" prompt="Destination_Login?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_String" value="argo"/>
    <contextParameter comment="" name="Destination_Port" prompt="Destination_Port?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_String" value="5432"/>
    <contextParameter comment="" name="Destination_Database" prompt="Destination_Database?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_String" value="harvest"/>
    <contextParameter comment="" name="Destination_Server" prompt="Destination_Server?" promptNeeded="false" repositoryContextId="_zBQGAFo_EeK1xoAXx1MZbA" type="id_String" value="localhost"/>
  </context>
  <parameters>
    <elementParameter field="TEXT" name="JOB_RUN_VM_ARGUMENTS" value=" -Xms256M -Xmx1024M"/>
    <elementParameter field="CHECK" name="JOB_RUN_VM_ARGUMENTS_OPTION" value="false"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_X" value="0"/>
    <elementParameter field="TEXT" name="SCREEN_OFFSET_Y" value="0"/>
    <elementParameter field="TEXT" name="SCHEMA_OPTIONS" value="none"/>
    <elementParameter field="TEXT" name="OEM_CUSTOM_ATTRIBUTE" value=""/>
    <elementParameter field="TEXT" name="HADOOP_APP_PATH" value=""/>
    <elementParameter field="TEXT" name="JOBID_FOR_OOZIE" value=""/>
    <elementParameter field="CHECK" name="IMPLICITCONTEXT_USE_PROJECT_SETTINGS" value="true"/>
    <elementParameter field="CHECK" name="STATANDLOG_USE_PROJECT_SETTINGS" value="true"/>
    <elementParameter field="FILE" name="IMPLICIT_TCONTEXTLOAD_FILE" value="&quot;&quot;"/>
    <elementParameter field="TEXT" name="FIELDSEPARATOR" value="&quot;&quot;"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION_IMPLICIT_CONTEXT" value=""/>
    <elementParameter field="CLOSED_LIST" name="LOAD_NEW_VARIABLE" value=""/>
    <elementParameter field="CLOSED_LIST" name="NOT_LOAD_OLD_VARIABLE" value=""/>
    <elementParameter field="CHECK" name="DISABLE_WARNINGS" value="false"/>
    <elementParameter field="CHECK" name="DISABLE_INFO" value="false"/>
    <elementParameter field="TECHNICAL" name="ENCODING:ENCODING_TYPE" value="ISO-8859-15"/>
    <elementParameter field="CLOSED_LIST" name="DB_VERSION" value="ojdbc14-10g.jar"/>
    <routinesParameter id="_LdRAcBnrEeKtI8kn2iXJbQ" name="DataOperation"/>
    <routinesParameter id="_X2KNUC4DEeK558KNMD8eOQ" name="GeoOperation"/>
    <routinesParameter id="_Xx-38C4DEeK558KNMD8eOQ" name="GeometryOperation"/>
    <routinesParameter id="_X4SUQC4DEeK558KNMD8eOQ" name="GeometryUtility"/>
    <routinesParameter id="_Le0foBnrEeKtI8kn2iXJbQ" name="Mathematical"/>
    <routinesParameter id="_LeVXcBnrEeKtI8kn2iXJbQ" name="Numeric"/>
    <routinesParameter id="_X3RnoC4DEeK558KNMD8eOQ" name="OpenStreetMap"/>
    <routinesParameter id="_Ld4EcBnrEeKtI8kn2iXJbQ" name="Relational"/>
    <routinesParameter id="_Lfz-IBnrEeKtI8kn2iXJbQ" name="SQLike"/>
    <routinesParameter id="_LeiLwBnrEeKtI8kn2iXJbQ" name="StringHandling"/>
    <routinesParameter id="_LfLsABnrEeKtI8kn2iXJbQ" name="TalendDataGenerator"/>
    <routinesParameter id="_LeIjIBnrEeKtI8kn2iXJbQ" name="TalendDate"/>
    <routinesParameter id="_LffOABnrEeKtI8kn2iXJbQ" name="TalendString"/>
    <routinesParameter id="_cRn34BQsEeKRFb0vPU_LNg" name="DAPUtils"/>
    <routinesParameter id="_IMfY4Dp8EeKYTu4DLH4cKg" name="NetCDFUtils"/>
  </parameters>
  <node componentName="iPostgresqlDbUpdate" componentVersion="0.1" offsetLabelX="0" offsetLabelY="0" posX="224" posY="128">
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="iPostgresqlDbUpdate_1"/>
    <elementParameter field="CHECK" name="START" value="true"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:PROPERTY_TYPE" value="REPOSITORY"/>
    <elementParameter field="TECHNICAL" name="PROPERTY:REPOSITORY_PROPERTY_TYPE" value="_HtNvQDKiEeKrFtsLd2Qz2g"/>
    <elementParameter field="TEXT" name="HOST" value="context.Destination_Server"/>
    <elementParameter field="TEXT" name="TYPE" value="POSTGRESQL"/>
    <elementParameter field="TEXT" name="PORT" value="context.Destination_Port"/>
    <elementParameter field="TEXT" name="DBNAME" value="context.Destination_Database"/>
    <elementParameter field="TEXT" name="SCHEMA_DB" value="context.Destination_Schema"/>
    <elementParameter field="TEXT" name="USER" value="context.Destination_Login"/>
    <elementParameter field="TEXT" name="PASS" value="context.Destination_Password"/>
    <elementParameter field="FILE" name="FILENAME" value="&quot;/par2/talend-team-2.ws/changelog.xml&quot;"/>
    <elementParameter field="CHECK" name="USE_INLINE_CONTENT" value="true"/>
    <elementParameter field="MEMO" name="INLINE_CONTENT" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?>&#xD;&#xA;&lt;databaseChangeLog xmlns=&quot;http://www.liquibase.org/xml/ns/dbchangelog&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd&quot;>&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1354485086817-1&quot;>&#xD;&#xA;        &lt;createTable tableName=&quot;data_centre&quot;>&#xD;&#xA;            &lt;column name=&quot;code&quot; type=&quot;VARCHAR(2)&quot;>&#xD;&#xA;                &lt;constraints nullable=&quot;false&quot; primaryKey=&quot;true&quot; primaryKeyName=&quot;data_centre_pk&quot;/>&#xD;&#xA;            &lt;/column>&#xD;&#xA;            &lt;column name=&quot;name&quot; type=&quot;VARCHAR(20)&quot;/>&#xD;&#xA;        &lt;/createTable>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;changeSet author=&quot;craigj&quot; id=&quot;argo-platform-views-1&quot;>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;AO&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;aoml&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;BO&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;bodc&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;CS&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;csiro&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;HZ&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;csio&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;IF&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;ifremer&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;IN&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;incois&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;JM&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;jamstec&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;JA&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;jma&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;KM&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;kma&quot;/>&#xD;&#xA;        &lt;/insert>&#xD;&#xA;        &lt;insert tableName=&quot;data_centre&quot;>&#xD;&#xA;             &lt;column name=&quot;code&quot; value=&quot;KO&quot;/>&#xD;&#xA;             &lt;column name=&quot;name&quot; value=&quot;kordi&quot;/>&#xD;&#xA;        &lt;/insert>    &#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1354485086817-15&quot;>&#xD;&#xA;        &lt;createTable tableName=&quot;region&quot;>&#xD;&#xA;            &lt;column name=&quot;name&quot; type=&quot;VARCHAR(30)&quot;>&#xD;&#xA;                &lt;constraints nullable=&quot;false&quot; primaryKey=&quot;true&quot; primaryKeyName=&quot;region_pk&quot;/>&#xD;&#xA;            &lt;/column>&#xD;&#xA;        &lt;/createTable>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-2&quot;>&#xD;&#xA;        &lt;sql>SELECT AddGeometryColumn( 'region', 'geom', 4326, 'GEOMETRY', 2);&lt;/sql>&#xD;&#xA;        &lt;sql>CREATE INDEX region_geom_idx  ON region  USING gist  (geom);&lt;/sql>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-3&quot;>&#xD;&#xA;            &lt;insert tableName=&quot;region&quot;>&#xD;&#xA;                 &lt;column name=&quot;name&quot; value=&quot;Western Australia&quot;/>&#xD;&#xA;                 &lt;column name=&quot;geom&quot; value=&quot;0103000020E610000001000000050000000000000000805B4000000000000034C00000000000005E4000000000000034C00000000000005E4000000000008042C00000000000805B4000000000008042C00000000000805B4000000000000034C0&quot;/>&#xD;&#xA;            &lt;/insert>&#xD;&#xA;            &lt;insert tableName=&quot;region&quot;>&#xD;&#xA;                 &lt;column name=&quot;name&quot; value=&quot;South Australia&quot;/>&#xD;&#xA;                 &lt;column name=&quot;geom&quot; value=&quot;0103000020E610000001000000050000000000000000005E400000000000003EC000000000008061400000000000003EC0000000000080614000000000008042C00000000000005E4000000000008042C00000000000005E400000000000003EC0&quot;/>&#xD;&#xA;            &lt;/insert>&#xD;&#xA;            &lt;insert tableName=&quot;region&quot;>&#xD;&#xA;                 &lt;column name=&quot;name&quot; value=&quot;New South Wales&quot;/>&#xD;&#xA;                 &lt;column name=&quot;geom&quot; value=&quot;0103000020E6100000010000000500000000000000008061400000000000003EC000000000006063400000000000003EC0000000000060634000000000008046C0000000000080614000000000008046C000000000008061400000000000003EC0&quot;/>&#xD;&#xA;            &lt;/insert>&#xD;&#xA;            &lt;insert tableName=&quot;region&quot;>&#xD;&#xA;                 &lt;column name=&quot;name&quot; value=&quot;Great Barrier Reef&quot;/>&#xD;&#xA;                 &lt;column name=&quot;geom&quot; value=&quot;0103000020E6100000010000000500000000000000002062400000000000002EC000000000006063400000000000002EC000000000006063400000000000003EC000000000002062400000000000003EC000000000002062400000000000002EC0&quot;/>&#xD;&#xA;            &lt;/insert>&#xD;&#xA;            &lt;insert tableName=&quot;region&quot;>&#xD;&#xA;                 &lt;column name=&quot;name&quot; value=&quot;BlueWater&quot;/>&#xD;&#xA;                 &lt;column name=&quot;geom&quot; value=&quotquot;/>&#xD;&#xA;            &lt;/insert>    &#xD;&#xA;    &lt;/changeSet>&#xA;&#xD;&#xA;    &lt;!-- Make sure only valid geometries can be inserted -->&#xA;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;fe0adb50-7809-11e3-981f-0800200c9a66&quot;>&#xA;        &lt;update tableName=&quot;region&quot;>&#xD;&#xA;             &lt;column name=&quot;geom&quot; value=&quot;0103000020E6100000020000000500000000000000008066C0000000000080564000000000008066400000000000805640000000000080664000000000008056C000000000008066C000000000008056C000000000008066C000000000008056400E00000000000000008061400000000000003EC00000000000005E400000000000003EC00000000000005E4000000000000034C00000000000805B4000000000000034C00000000000805B4000000000008042C00000000000005E4000000000008042C0000000000080614000000000008042C0000000000080614000000000008046C0000000000060634000000000008046C000000000006063400000000000003EC000000000006063400000000000002EC000000000002062400000000000002EC000000000002062400000000000003EC000000000008061400000000000003EC0&quot;/>&#xD;&#xA;             &lt;where>name='BlueWater'&lt;/where>&#xD;&#xA;        &lt;/update>&#xA;&#xD;&#xA;        &lt;sql>ALTER TABLE region ADD CHECK (ST_IsValid(geom))&lt;/sql>&#xA;    &lt;/changeSet>&#xA;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-4&quot;>&#xD;&#xA;        &lt;createProcedure>&#xD;&#xA;             CREATE OR REPLACE FUNCTION getendtoken(p_string character, p_regexp character, p_n integer)&#xD;&#xA;               RETURNS character AS&#xD;&#xA;             &#x9;    'DECLARE&#xD;&#xA;             &#x9;&#x9;tokens text[]; &#xD;&#xA;                     BEGIN&#xD;&#xA;             &#x9;&#x9;select into tokens regexp_split_to_array(p_string, p_regexp); &#xD;&#xA;             &#x9;&#x9;return (select tokens[array_length(tokens,1)- p_n  + 1]); &#xD;&#xA;                     END;'&#xD;&#xA;               LANGUAGE plpgsql VOLATILE&#xD;&#xA;               COST 100; &#xD;&#xA;        &lt;/createProcedure>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-5&quot;>&#xD;&#xA;        &lt;createProcedure>&#xD;&#xA;             CREATE OR REPLACE FUNCTION format_name(p_name character)&#xD;&#xA;               RETURNS character AS&#xD;&#xA;             &#x9;    'DECLARE&#xD;&#xA;             &#x9;&#x9;parts text[];&#xD;&#xA;                     BEGIN&#xD;&#xA;             &#x9;&#x9;select into parts (regexp_matches(initcap(p_name), ''(.*)[ ,.]([a-zA-Z-]+)''));&#xD;&#xA;             &#x9;&#x9;return (select parts[2]||'', ''||parts[1]);&#xD;&#xA;                     END;'&#xD;&#xA;               LANGUAGE plpgsql VOLATILE&#xD;&#xA;               COST 100;&#xD;&#xA;        &lt;/createProcedure>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-6&quot;>&#xD;&#xA;        &lt;createProcedure>&#xD;&#xA;            CREATE OR REPLACE FUNCTION make_shortest_line(pointa geometry, pointb geometry)&#xD;&#xA;               RETURNS geometry AS &#xD;&#xA;              'DECLARE&#xD;&#xA;               pointashifted GEOMETRY;&#xD;&#xA;               pointbshifted GEOMETRY;&#xD;&#xA;               result GEOMETRY;&#xD;&#xA;               shifted GEOMETRY;&#xD;&#xA;               meridian_intersection GEOMETRY;&#xD;&#xA;               meridian_intersection_unshifted GEOMETRY;&#xD;&#xA; &#xD;&#xA;              BEGIN&#xD;&#xA;               IF ((pointa is null) or (pointb is null) or (st_geometrytype(pointa) &amp;lt;&amp;gt; ''ST_Point'') or (st_geometrytype(pointb) &amp;lt;&amp;gt; ''ST_Point'')) THEN&#xD;&#xA;                 RETURN null;&#xD;&#xA;               END IF;&#xD;&#xA; &#xD;&#xA;               IF ((st_x(pointa) not between -180 and 180) or (st_y(pointa) not between -90 and 90) or (st_x(pointb) not between -180 and 180) or (st_y(pointb) not between -90 and 90)) THEN&#xD;&#xA;                 RETURN null;&#xD;&#xA;               END IF;&#xD;&#xA;&#xD;&#xA;               IF (abs(st_x(pointb) - st_x(pointa))) &amp;lt;= 180 THEN&#xD;&#xA;                 /* shortest line is the line between the points */&#xD;&#xA;                 SELECT INTO result st_makeline(pointa, pointb);&#xD;&#xA;               ELSE&#xD;&#xA;                 /* shortest line is a line crossing the anti-meridian split at the anti-meridian */&#xD;&#xA;                 SELECT INTO shifted st_shift_longitude(st_makeline(pointa, pointb));&#xD;&#xA;                 SELECT INTO pointashifted st_shift_longitude(pointa);&#xD;&#xA;                 SELECT INTO pointbshifted st_shift_longitude(pointb);&#xD;&#xA;                 SELECT INTO meridian_intersection st_line_interpolate_point(shifted, (180-st_x(pointashifted))/(st_x(pointbshifted)-st_x(pointashifted)));&#xD;&#xA;                 SELECT INTO meridian_intersection_unshifted st_makepoint(-180, st_y(meridian_intersection));&#xD;&#xA;      &#xD;&#xA;                 IF (st_x(pointa) &amp;lt; 0) THEN&#xD;&#xA;                   SELECT INTO result st_collect(st_makeline(pointa, meridian_intersection_unshifted), st_makeline(meridian_intersection, pointb));&#xD;&#xA;                 ELSE&#xD;&#xA;                   SELECT INTO result st_collect(st_makeline(pointa, meridian_intersection), st_makeline(meridian_intersection_unshifted, pointb));&#xD;&#xA;                 END IF;&#xD;&#xA;               END IF;&#xD;&#xA;  &#xD;&#xA;               RETURN result;&#xD;&#xA;              END;'&#xD;&#xA;               LANGUAGE plpgsql VOLATILE&#xD;&#xA;               COST 100;&#xD;&#xA;        &lt;/createProcedure>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-7&quot;>&#xD;&#xA;        &lt;createProcedure>&#xD;&#xA;CREATE OR REPLACE FUNCTION add_point_shortest(linestring geometry, point geometry)&#xD;&#xA;  RETURNS geometry AS&#xD;&#xA;'DECLARE&#xD;&#xA;   next_segment GEOMETRY;&#xD;&#xA; &#xD;&#xA; BEGIN&#xD;&#xA;  IF ((linestring is null) or (st_geometrytype(linestring)&amp;lt;&amp;gt;''ST_LineString'') or (point is null) or (st_geometrytype(point)&amp;lt;&amp;gt;''ST_Point'')) THEN&#xD;&#xA;    RETURN null;&#xD;&#xA;  END IF;&#xD;&#xA;  &#xD;&#xA;  SELECT INTO next_segment make_shortest_line(st_endpoint(linestring), point);&#xD;&#xA;&#xD;&#xA;  IF (st_geometrytype(next_segment) = ''ST_MultiLineString'') THEN&#xD;&#xA;    RETURN st_collect(st_addpoint(linestring, st_endpoint(st_geometryn(next_segment, 1))), st_geometryn(next_segment, 2));&#xD;&#xA;  ELSE&#xD;&#xA;    RETURN st_addpoint(linestring, point);&#xD;&#xA;  END IF;&#xD;&#xA; END;'&#xD;&#xA;  LANGUAGE plpgsql VOLATILE&#xD;&#xA;  COST 100;&#xD;&#xA;        &lt;/createProcedure>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;argo-platform-views-8&quot;>&#xD;&#xA;        &lt;createProcedure>&#xD;&#xA;CREATE OR REPLACE FUNCTION make_trajectory(accum geometry, point geometry)&#xD;&#xA;  RETURNS geometry AS&#xD;&#xA;'DECLARE&#xD;&#xA;   result GEOMETRY;&#xD;&#xA; &#xD;&#xA; BEGIN&#xD;&#xA;  IF (accum is null) THEN&#xD;&#xA;    RETURN point;&#xD;&#xA;  ELSIF (point is null) THEN&#xD;&#xA;    RETURN accum;&#xD;&#xA;  ELSIF (st_geometrytype(accum) = ''ST_Point'') THEN&#xD;&#xA;    RETURN make_shortest_line(accum, point);&#xD;&#xA;  ELSIF (st_geometrytype(accum) = ''ST_LineString'') THEN&#xD;&#xA;    RETURN add_point_shortest(accum, point);&#xD;&#xA;  ELSIF (st_geometrytype(accum) = ''ST_MultiLineString'') THEN&#xD;&#xA;    SELECT INTO result st_geometryn(accum, 1);&#xD;&#xA;    &#xD;&#xA;    FOR idx in 2 .. st_numgeometries(accum) - 1 LOOP&#xD;&#xA;      SELECT INTO result st_collect(result, st_geometryn(accum, idx));&#xD;&#xA;    END LOOP;&#xD;&#xA;&#xD;&#xA;    RETURN st_collectionextract(st_collect(result, add_point_shortest(st_geometryn(accum, st_numgeometries(accum)), point)),2);&#xD;&#xA;  ELSE&#xD;&#xA;    RETURN null;&#xD;&#xA;  END IF;&#xD;&#xA; END;'&#xD;&#xA;  LANGUAGE plpgsql VOLATILE&#xD;&#xA;  COST 100;&#xD;&#xA;&#x9;&lt;/createProcedure>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;craigj&quot; id=&quot;1354485086817-28A&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;platform_metadata_current&quot;>&#xD;&#xA;             SELECT file.url, file.modified, platform_metadata.id, platform_metadata.file_id, platform_metadata.data_type, platform_metadata.format_version, platform_metadata.handbook_version, platform_metadata.date_creation, platform_metadata.date_update, platform_metadata.platform_number, platform_metadata.ptt, platform_metadata.trans_system, platform_metadata.trans_system_id, platform_metadata.trans_frequency, platform_metadata.trans_repetition, platform_metadata.positioning_system, platform_metadata.clock_drift, platform_metadata.platform_model, platform_metadata.platform_maker, platform_metadata.inst_reference, platform_metadata.wmo_inst_type, platform_metadata.direction, platform_metadata.project_name, platform_metadata.data_centre, platform_metadata.pi_name, platform_metadata.anomaly, platform_metadata.launch_date, platform_metadata.launch_latitude, platform_metadata.launch_longitude, platform_metadata.launch_qc, platform_metadata.start_date, platform_metadata.start_date_qc, platform_metadata.deploy_platform, platform_metadata.deploy_mission, platform_metadata.deploy_available_profile_id, platform_metadata.end_mission_date, platform_metadata.end_mission_status&#xD;&#xA;               FROM platform_metadata&#xD;&#xA;               JOIN indexed_file file ON file.id = platform_metadata.file_id&#xD;&#xA;               JOIN index_job job ON job.last_run_no = file.last_indexed_run;&#xD;&#xA;           &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;changeSet author=&quot;craigj&quot; id=&quot;1354485086817-28B&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;profile_general_current&quot;>&#xD;&#xA;             SELECT file.url, file.modified, profile.file_id, profile.profile_no, profile.platform_number, profile.project_name, profile.pi_name, profile.cycle_number, profile.direction, profile.data_centre, profile.dc_reference, profile.data_state_indicator, profile.data_mode, profile.inst_reference, profile.wmo_inst_type, profile.juld, profile.juld_qc, profile.juld_location, profile.latitude, profile.longitude, profile.position_qc, profile.positioning_system, profile.profile_pres_qc, profile.profile_temp_qc, profile.profile_psal_qc, profile.profile_doxy_qc, profile.profile_temp_doxy_qc&#xD;&#xA;               FROM profile_general profile&#xD;&#xA;               JOIN indexed_file file ON file.id = profile.file_id&#xD;&#xA;               JOIN index_job job ON job.last_run_no = file.last_indexed_run;&#xD;&#xA;         &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;!-- Create a view containing summary information for an argo float -->&#xD;&#xA;    &lt;!-- TODO: remove metadata_mod_date and last_profile_mod_date which were used by previous java harvester -->&#xD;&#xA;    &lt;!-- need to check impact on GeoServer/FTL -->&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1354485086817-29&quot;  runOnChange=&quot;true&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;argo_float&quot; replaceIfExists=&quot;true&quot;>&#xD;&#xA;             SELECT&#xD;&#xA;                metadata.file_id, &#xD;&#xA;                getendtoken(metadata.url, '/', 3) as thredds_folder,&#xD;&#xA;                trim(metadata.platform_number) as platform_number, &#xD;&#xA;                uuid_generate_v3(uuid_ns_url(),'http://emii.org.au/argo/platform/' || getendtoken(metadata.url, '/', 3) || '/' || metadata.platform_number) as uuid,&#xD;&#xA;                launch_date,&#xD;&#xA;                launch_longitude as launch_long,&#xD;&#xA;                launch_latitude as launch_lat,&#xD;&#xA;                start_date,&#xD;&#xA;                format_name(regexp_replace(metadata.pi_name,'jamstec','','i')) as pi_name,&#xD;&#xA;                metadata.data_centre as data_centre_code,&#xD;&#xA;                (select name from data_centre where code = metadata.data_centre) as data_centre,&#xD;&#xA;                last_profile.juld as last_measure_date, &#xD;&#xA;                last_profile_region.name as region,&#xD;&#xA;                st_xmin(platform_summary.extent) as min_long,&#xD;&#xA;                st_xmax(platform_summary.extent) as max_long,&#xD;&#xA;                last_profile.longitude as last_long,&#xD;&#xA;                st_ymin(platform_summary.extent) as min_lat,&#xD;&#xA;                st_ymax(platform_summary.extent) as max_lat,&#xD;&#xA;                last_profile.latitude as last_lat,&#xD;&#xA;                coalesce(exists(select true from profile_params where file_id = last_profile.file_id and trim(station_parameters) = 'DOXY'), false) as oxygen_sensor,&#xD;&#xA;                metadata.modified at time zone 'UTC' as metadata_mod_date,&#xD;&#xA;                getendtoken(last_profile.url,'/',1) as last_profile_dataset,&#xD;&#xA;                last_profile.modified at time zone 'UTC' as last_profile_mod_date,&#xD;&#xA;                lpad(to_hex((trunc((random() * (16777215)::double precision)))::integer), 6, '0') as colour,&#xD;&#xA;                st_setsrid(st_makepoint(last_profile.longitude, last_profile.latitude), 4326) as last_location&#xD;&#xA;                FROM platform_metadata_current metadata&#xD;&#xA;                      LEFT OUTER JOIN &#xD;&#xA;                        (select trim(data_centre) as data_centre, trim(platform_number) as platform_number, split_part(min((99999-cycle_number)||','||data_mode||','||file_id||','||profile_no),',',3)::integer as last_profile_id, split_part(min((100000-cycle_number)||','||data_mode||','||file_id||','||profile_no),',',4)::integer as last_profile_no, st_extent(st_makepoint(longitude, latitude)) as extent&#xD;&#xA;                           from profile_general_current&#xD;&#xA;                          group by trim(data_centre), trim(platform_number)) as platform_summary on (trim(platform_summary.data_centre) = trim(metadata.data_centre) and trim(platform_summary.platform_number) = trim(metadata.platform_number))&#xD;&#xA;                      LEFT OUTER JOIN profile_general_current as last_profile on (last_profile.file_id = platform_summary.last_profile_id and last_profile.profile_no = platform_summary.last_profile_no)&#xD;&#xA;                      LEFT OUTER JOIN region as last_profile_region on (ST_Contains(last_profile_region.geom, st_setsrid(st_makepoint(last_profile.longitude, last_profile.latitude),4326)))&#xD;&#xA;        &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;    &#xD;&#xA;    &lt;!-- Can be more than one profile file present for the cycle: deferred, realtime    -->&#xD;&#xA;    &lt;!-- (rare - meant to be only one) and descending and/or ascending (also rare)      -->&#xD;&#xA;    &lt;!-- Create a view containing the best profile to use for location purposes         -->&#xD;&#xA;    &lt;!-- Pick a deferred profile in preference to a realtime profile as this has been   -->&#xD;&#xA;    &lt;!-- QA'd. Ascending or descending doesn't matter - both have the same location     -->&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;craigj&quot; id=&quot;1354485086817-31&quot; runOnChange=&quot;true&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;best_cycle_location&quot; replaceIfExists=&quot;true&quot;>&#xD;&#xA;            SELECT DISTINCT ON (profile.data_centre, profile.platform_number, profile.cycle_number)&#xD;&#xA;              file.url, &#xD;&#xA;              file.modified, &#xD;&#xA;              profile.*,&#xD;&#xA;              lag(profile.latitude, 1) OVER (PARTITION BY profile.data_centre, profile.platform_number ORDER BY profile.cycle_number) as last_latitude,&#xD;&#xA;              lag(profile.longitude, 1) OVER (PARTITION BY profile.data_centre, profile.platform_number ORDER BY profile.cycle_number) as last_longitude&#xD;&#xA;             FROM profile_general profile&#xD;&#xA;             JOIN indexed_file file ON file.id = profile.file_id&#xD;&#xA;             JOIN index_job job ON job.last_run_no = file.last_indexed_run&#xD;&#xA;            WHERE profile.position_qc = '1'&#xD;&#xA;            ORDER BY profile.data_centre, profile.platform_number, profile.cycle_number,&#xD;&#xA;              CASE&#xD;&#xA;                WHEN profile.data_mode = 'D' THEN 0&#xD;&#xA;                ELSE 1&#xD;&#xA;              END; &#xD;&#xA;         &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;!-- Create view containing summary info for each cycle.  Includes line segment from previous cycle for float (or the launch location if there isn't one) to the current location. -->&#xD;&#xA;    &lt;!-- Includes same columns as previous java harvester TODO: remove columns which are no longer filled (may need changes to GeoServer/FTL) -->&#xD;&#xA;   &#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1354485086817-32&quot; runOnChange=&quot;true&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;float_cycle&quot; replaceIfExists=&quot;true&quot;>&#xD;&#xA;             SELECT platform.file_id AS float_id, &#xD;&#xA;             &#x9;profile.cycle_number AS cycle,&#xD;&#xA;             &#x9;getendtoken(profile.url, '/', 1) AS profile_dataset, &#xD;&#xA;             &#x9;(((getendtoken(profile.url, '/', 4) || '/') || getendtoken(profile.url, '/', 3)) || '/') || getendtoken(profile.url, '/', 2) AS thredds_folder, &#xD;&#xA;             &#x9;NULL::timestamp without time zone AS descent_start_date, &#xD;&#xA;             &#x9;NULL::timestamp without time zone AS ascent_end_date, &#xD;&#xA;             &#x9;profile.juld AS last_measurement_date, &#xD;&#xA;             &#x9;st_setsrid(make_shortest_line(COALESCE(st_makepoint(profile.last_longitude, profile.last_latitude), st_makepoint(platform.launch_longitude, platform.launch_latitude)), st_makepoint(profile.longitude, profile.latitude)), 4326) AS trajectory&#xD;&#xA;               FROM best_cycle_location profile&#xD;&#xA;                     INNER JOIN platform_metadata_current platform ON platform.data_centre::text = profile.data_centre::text AND platform.platform_number::text = profile.platform_number::text&#xD;&#xA;          &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;!-- Create a view for the Argo Profiles layer -->&#xD;&#xA;   &#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;e1f77180-3551-11e3-aa6e-0800200c9a66&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;profile_layer&quot; replaceIfExists=&quot;true&quot;>&#xD;&#xA;&#x9;&#x9;select *,&#xD;&#xA;&#x9;&#x9;       exists(&#xD;&#xA;&#x9;&#x9;&#x9;select true &#xD;&#xA;&#x9;&#x9;&#x9;  from profile_params &#xD;&#xA;&#x9;&#x9;&#x9; where profile_params.file_id = profile_general.file_id &#xD;&#xA;&#x9;&#x9;&#x9;   and profile_params.profile_no = profile_general.profile_no &#xD;&#xA;&#x9;&#x9;&#x9;   and station_parameters = 'DOXY'&#xD;&#xA;&#x9;&#x9;       ) as oxygen_sensor&#xD;&#xA;&#x9;&#x9;from profile_general&#xD;&#xA;          &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;!-- Create a view for the Argo Profile Download service -->&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;ba871a50-3557-11e3-aa6e-0800200c9a66-1&quot; failOnError=&quot;false&quot;>&#xD;&#xA;        &lt;dropView viewName=&quot;profile_download&quot;/>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;ba871a50-3557-11e3-aa6e-0800200c9a66-2&quot; failOnError=&quot;true&quot;>&#xD;&#xA;        &lt;createView viewName=&quot;profile_download&quot;>&#xD;&#xA;            select &#xD;&#xA;&#x9;&#x9;  data_centre, platform_number, &#xD;&#xA;&#x9;&#x9;  cycle_number,  direction,&#xD;&#xA;&#x9;&#x9;  data_state_indicator, &#xD;&#xA;&#x9;&#x9;  data_mode, juld, juld_qc, &#xD;&#xA;&#x9;&#x9;  juld_location, latitude, &#xD;&#xA;&#x9;&#x9;  longitude, position_qc,&#xD;&#xA;&#x9;&#x9;  &quot;position&quot;, oxygen_sensor,&#xD;&#xA;&#x9;&#x9;  project_name,&#xD;&#xA;&#x9;&#x9;  level_no, pres, pres_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted, pres_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted_error, temp, &#xD;&#xA;&#x9;&#x9;  temp_qc, temp_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_adjusted_qc, temp_adjusted_error,&#xD;&#xA;&#x9;&#x9;  psal, psal_qc, psal_adjusted, &#xD;&#xA;&#x9;&#x9;  psal_adjusted_qc, psal_adjusted_error,&#xD;&#xA;&#x9;&#x9;  doxy, doxy_adjusted, doxy_qc, &#xD;&#xA;&#x9;&#x9;  doxy_adjusted_qc, doxy_adjusted_error,&#xD;&#xA;&#x9;&#x9;  temp_doxy, temp_doxy_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_doxy_qc, temp_doxy_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  temp_doxy_adjusted_error&#xD;&#xA;&#x9;&#x9; FROM &#xD;&#xA;&#x9;&#x9;  profile_layer, &#xD;&#xA;&#x9;&#x9;  profile_measurements&#xD;&#xA;&#x9;&#x9;WHERE profile_layer.file_id = profile_measurements.file_id&#xD;&#xA;&#x9;&#x9;  and profile_layer.profile_no = profile_measurements.profile_no&#xD;&#xA;          &lt;/createView>&#xD;&#xA;    &lt;/changeSet>&#xD;&#xA;&#xD;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1385090701209-2&quot; failOnError=&quot;true&quot;>&#xD;&#xA;        &lt;dropView viewName=&quot;profile_download&quot;/>&#xD;&#xA;        &lt;dropView viewName=&quot;profile_layer&quot;/>&#xD;&#xA;&#xD;&#xA;        &lt;createView viewName=&quot;profile_layer&quot;>&#xD;&#xA;          select profile_general.*,&#xD;&#xA;                       exists(&#xD;&#xA;                           select true&#xD;&#xA;                             from profile_params&#xD;&#xA;                            where profile_params.file_id = profile_general.file_id&#xD;&#xA;                              and profile_params.profile_no = profile_general.profile_no&#xD;&#xA;                              and station_parameters = 'DOXY') as oxygen_sensor,&#xD;&#xA;                       indexed_file.url&#xD;&#xA;             from profile_general&#xD;&#xA;                left join indexed_file&#xD;&#xA;                 on file_id = indexed_file.id&#xD;&#xA;        &lt;/createView>&#xD;&#xA;&#xD;&#xA;        &lt;createView viewName=&quot;profile_download&quot;>&#xD;&#xA;&#x9;&#x9;select &#xD;&#xA;&#x9;&#x9;  data_centre, platform_number, &#xD;&#xA;&#x9;&#x9;  cycle_number,  direction,&#xD;&#xA;&#x9;&#x9;  data_state_indicator, &#xD;&#xA;&#x9;&#x9;  data_mode, juld, juld_qc, &#xD;&#xA;&#x9;&#x9;  juld_location, latitude, &#xD;&#xA;&#x9;&#x9;  longitude, position_qc,&#xD;&#xA;&#x9;&#x9;  &quot;position&quot;, oxygen_sensor,&#xD;&#xA;&#x9;&#x9;  project_name,&#xD;&#xA;&#x9;&#x9;  level_no, pres, pres_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted, pres_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted_error, temp, &#xD;&#xA;&#x9;&#x9;  temp_qc, temp_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_adjusted_qc, temp_adjusted_error,&#xD;&#xA;&#x9;&#x9;  psal, psal_qc, psal_adjusted, &#xD;&#xA;&#x9;&#x9;  psal_adjusted_qc, psal_adjusted_error,&#xD;&#xA;&#x9;&#x9;  doxy, doxy_adjusted, doxy_qc, &#xD;&#xA;&#x9;&#x9;  doxy_adjusted_qc, doxy_adjusted_error,&#xD;&#xA;&#x9;&#x9;  temp_doxy, temp_doxy_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_doxy_qc, temp_doxy_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  temp_doxy_adjusted_error&#xD;&#xA;&#x9;&#x9; FROM &#xD;&#xA;&#x9;&#x9;  profile_layer, &#xD;&#xA;&#x9;&#x9;  profile_measurements&#xD;&#xA;&#x9;&#x9;WHERE profile_layer.file_id = profile_measurements.file_id&#xD;&#xA;&#x9;&#x9;  and profile_layer.profile_no = profile_measurements.profile_no&#xD;&#xA;        &lt;/createView>   &#xD;&#xA;    &lt;/changeSet>&#xA;&#xA;    &lt;changeSet author=&quot;talend&quot; id=&quot;1385090701209-3&quot; failOnError=&quot;true&quot;>&#xD;&#xA;        &lt;dropView viewName=&quot;profile_download&quot;/>&#xD;&#xA;        &lt;dropView viewName=&quot;profile_layer&quot;/>&#xD;&#xA;&#xD;&#xA;        &lt;createView viewName=&quot;profile_summary&quot;>&#xD;&#xA;          select profile_general.*,&#xD;&#xA;                       exists(&#xD;&#xA;                           select true&#xD;&#xA;                             from profile_params&#xD;&#xA;                            where profile_params.file_id = profile_general.file_id&#xD;&#xA;                              and profile_params.profile_no = profile_general.profile_no&#xD;&#xA;                              and station_parameters = 'DOXY') as oxygen_sensor&#xD;&#xA;             from profile_general&#xD;&#xA;        &lt;/createView>&#xD;&#xA;&#xD;&#xA;        &lt;createView viewName=&quot;profile_download&quot;>&#xD;&#xA;&#x9;&#x9;select &#xD;&#xA;&#x9;&#x9;  data_centre, platform_number, &#xD;&#xA;&#x9;&#x9;  cycle_number,  direction,&#xD;&#xA;&#x9;&#x9;  data_state_indicator, &#xD;&#xA;&#x9;&#x9;  data_mode, juld, juld_qc, &#xD;&#xA;&#x9;&#x9;  juld_location, latitude, &#xD;&#xA;&#x9;&#x9;  longitude, position_qc,&#xD;&#xA;&#x9;&#x9;  &quot;position&quot;, oxygen_sensor,&#xD;&#xA;&#x9;&#x9;  project_name,&#xD;&#xA;&#x9;&#x9;  level_no, pres, pres_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted, pres_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  pres_adjusted_error, temp, &#xD;&#xA;&#x9;&#x9;  temp_qc, temp_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_adjusted_qc, temp_adjusted_error,&#xD;&#xA;&#x9;&#x9;  psal, psal_qc, psal_adjusted, &#xD;&#xA;&#x9;&#x9;  psal_adjusted_qc, psal_adjusted_error,&#xD;&#xA;&#x9;&#x9;  doxy, doxy_adjusted, doxy_qc, &#xD;&#xA;&#x9;&#x9;  doxy_adjusted_qc, doxy_adjusted_error,&#xD;&#xA;&#x9;&#x9;  temp_doxy, temp_doxy_adjusted, &#xD;&#xA;&#x9;&#x9;  temp_doxy_qc, temp_doxy_adjusted_qc, &#xD;&#xA;&#x9;&#x9;  temp_doxy_adjusted_error&#xD;&#xA;&#x9;&#x9; FROM &#xD;&#xA;&#x9;&#x9;  profile_summary, &#xD;&#xA;&#x9;&#x9;  profile_measurements&#xD;&#xA;&#x9;&#x9;WHERE profile_summary.file_id = profile_measurements.file_id&#xD;&#xA;&#x9;&#x9;  and profile_summary.profile_no = profile_measurements.profile_no&#xD;&#xA;        &lt;/createView>   &#xD;&#xA;    &lt;/changeSet>&#xA;&lt;/databaseChangeLog>"/>
    <elementParameter field="TEXT" name="CONNECTION_FORMAT" value="row"/>
    <elementParameter field="CHECK" name="INFORMATION" value="false"/>
    <elementParameter field="MEMO" name="COMMENT" value=""/>
    <elementParameter field="CHECK" name="VALIDATION_RULES" value="false"/>
  </node>
  <subjob>
    <elementParameter field="CHECK" name="SHOW_SUBJOB_TITLE" value="true"/>
    <elementParameter field="TEXT" name="UNIQUE_NAME" value="iPostgresqlDbUpdate_1"/>
    <elementParameter field="TEXT" name="SUBJOB_TITLE" value="Create local views"/>
    <elementParameter field="COLOR" name="SUBJOB_TITLE_COLOR" value="160;190;240"/>
    <elementParameter field="COLOR" name="SUBJOB_COLOR" value="220;220;250"/>
  </subjob>
</talendfile:ProcessType>
